version: 0.2


env:
  parameter-store:
    IMAGE_REPO_NAME: "/$ENVIRONMENT/JEDIIRY_IMAGE_REPO_NAME"
    # AWS_ACCOUNT_ID: "/$ENVIRONMENT/JEDIIRY_AWS_ACCOUNT_ID" 
    AWS_REGION: "/$ENVIRONMENT/JEDIIRY_AWS_REGION"  
    CLUSTER_NAME: "/$ENVIRONMENT/JEDIIRY_CLUSTER_NAME"   

phases:
  install:
    commands:
      - docker pull bitnami/kubectl:latest
      - alias kubectl='docker run --rm -v ~/.kube:/root/.kube bitnami/kubectl'
      - kubectl version --client
      - pip install awscli
      - export AWS_ACCOUNT_ID=$(aws sts get-caller-identity --output text --query Account)

  pre_build:
    commands:
      - echo $ENVIRONMENT
      - echo Logging in to Amazon ECR....
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
      - aws eks --region $AWS_REGION update-kubeconfig --name $CLUSTER_NAME
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - export IMAGE_TAG=${COMMIT_HASH}
      - export IMAGE_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
    
  build:
    commands:
      - echo Building docker image
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $IMAGE_URI
      - docker push $IMAGE_URI
    
  post_build:
    commands:
      - echo Build completed
      - sed -i "s|<IMAGE_PLACEHOLDER>|$IMAGE_URI|g" k8s/deployment.yml
      - kubectl apply -f k8s/deployment.yml
      - kubectl apply -f k8s/service.yml
      - kubectl get service jediiry-service

artifacts:
  files:
    - k8s/deployment.yml
